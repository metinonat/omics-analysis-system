# docker-compose.yml
version: "3.8"
services:
  mongo:
    image: mongo:5.0
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=omicsdb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./database/db:/data/db
      - ./database/dev.archive:/Databases/dev.archive
      - ./database/production:/Databases/production
      - ./database/log:/Databases/log
      - ./database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    command: mongod --logpath /Databases/log/mongod.log --logappend
  mongo-express:
    image: mongo-express
    container_name: mexpress
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://root:password@mongo:27017/?authSource=admin
      - ME_CONFIG_BASICAUTH_USERNAME=mexpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
    links:
      - mongo
    restart: unless-stopped
    ports:
      - "8081:8081"
  omics-backend:
    image: omics-backend
    depends_on:
      mongo:
        condition: service_started
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    environment:
      - MONGO_URL=mongodb://mongo:27017
      - MONGO_USER=api
      - MONGO_PASSWORD=o230D3kfas9
      - MONGO_DB=omics-db
      - HTTP_PORT=8080
      - UPLOADS_DIR=/usr/app/uploads/
      - LOG_LEVEL=debug
    ports:
      - 8080:8080
      - 9229:9229
    command: ["node", "--inspect=0.0.0.0:9229", "app.js"]
    tty: true
  omics-frontend:
    image: omics-frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    environment:
      - DRAWER_WIDTH=240
      - API_URL=http://omics-backend:8080
    ports:
      - 8000:3000
    command: ["npm", "start"]
